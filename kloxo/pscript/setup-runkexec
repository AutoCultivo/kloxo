#!/bin/sh

echo "*** Setup 'runkexec' (for fast reboot) ***"


#if [ -f /proc/user_beancounters ] ; then
#if [ "$(grep envID /proc/self/status)" != "" ] ; then
if [ "$(sh /script/virtual-info -t)" == "container" ] ; then
	echo '- Not work in Container-type VPS (like OpenVZ)'
	exit
fi

if [ "$(rpm -qa kexec-tools)" == "" ] ; then
	echo "- Install 'kexec-tools'"
	yum install kexec-tools -y
fi

echo "- Create 'runexec' init"
read -r -d '' runkexec << EOF
#!/bin/bash
#
### BEGIN INIT INFO
# Provides: runkexec
# Required-Start:
# Required-Stop:
# Default-Stop:
# Description: Enable or disable fast system rebooting
# Short-Description: enable or disable fast system rebooting
### END INIT INFO

KV=\$(uname -r)
PC=\$(cat /proc/cmdline)

case "\$1" in
  start|restart|load|reload)
        kexec -l --append="\${PC}" --initrd=/boot/initramfs-\${KV}.img /boot/vmlinuz-\${KV}
        ;;
  stop|unload)
        kexec -u && echo "Target kexec kernel unloaded."
        ;;
  status)
        echo "Status not available for kexec."
        ;;
  *)
        echo "Usage: runkexec {start|restart|load|reload|stop|unload|status}"
        exit 2
esac
exit 0
EOF

kfile="/etc/rc.d/init.d/runkexec"

echo "${runkexec}" > ${kfile}

chown root:root ${kfile}
chmod 755 ${kfile}

## MR not work for chkconfig
#chkconfig runkexec on
ln -sf ${kfile} /etc/rc1.d/S00kexec

stype=$(ps --no-headers -o comm 1)

if [ "${stype}" == "systemd" ] ; then
	systemctl daemon-reload
fi

echo
echo "* Note:"
echo "  - For fast reboot, run 'service runkexec start'"

